#DERYA TINMAZ 2380947
.pos 0
    irmovq stack, %rsp
    irmovq root, %rdi
    irmovq array, %rsi
    irmovq $0x8, %rdx
    call collect_into
    halt
    
collect_into:
    xorq %rax, %rax 
    andq %rdi, %rdi 
    je end #if root
    irmovq $0, %r10
    subq %r10, %rdx
    jle end  #if arr_len<=0
    irmovq $1, %r10 #1
    irmovq $8, %r12 #8
    
    pushq %rbx #root holder
    rrmovq %rdi, %rbx
    pushq %r9 #array_len holder
    rrmovq %rdx, %r9
    pushq %r8 #left_len holder
    pushq %r11 #array holder
    rrmovq %rsi, %r11   
    
    mrmovq 8(%rdi), %rdi #root->left
    call collect_into
    rrmovq %rax, %r8
    
    rrmovq %r8, %r13, 
    subq %r9, %r13 #left_len == array_len
    jge end2
    
    rrmovq %r11, %rsi #array
    addq %r8, %rsi 
    addq %r8, %rsi
    addq %r8, %rsi
    addq %r8, %rsi
    addq %r8, %rsi 
    addq %r8, %rsi
    addq %r8, %rsi
    addq %r8, %rsi #array+left_len
    
    rrmovq %rsi, %r13 #array+left_len
    mrmovq (%rbx), %r14 #root->val
    rmmovq %r14, (%r13) #[array+left_len]=root->val
    
    rrmovq %rbx, %rdi #root
    mrmovq 16(%rdi), %rdi #root->right

    addq %r12, %rsi #array+1 +left_len
    
    rrmovq %r9, %rdx #array_len    
    subq %r8, %rdx #array_len-left_len
    subq %r10, %rdx #array_len-left_len-1
    
    call collect_into
    addq %r8, %rax #right_len + left_len
    addq %r10, %rax #right_len + left_len + 1
jmp end3
end2:
    rrmovq %r8, %rax
end3:
    popq %r11
    popq %r8
    popq %r9
    popq %rbx

end:
    ret

.pos 0x200
root:
.quad 17
.quad node6
.quad node24
node6:
.quad 6
.quad node4
.quad node11
node4:
.quad 4
.quad node3
.quad node5
node3:
.quad 3
.quad 0
.quad 0
node5:
.quad 5
.quad 0 # Remember that 0 is null.
.quad 0
node11:
.quad 11
.quad node8
.quad 0
node8:
.quad 8
.quad 0
.quad 0
node24:
.quad 24
.quad node19
.quad node40
node19:
.quad 19
.quad 0
.quad 0
node40:
.quad 40
.quad 0
.quad node52
node52:
.quad 52
.quad 0
.quad 0

.pos 0x400
array:
    .quad 0
    .quad 0
    .quad 0
    .quad 0
    .quad 0
    .quad 0
    .quad 0
    .quad 0

.pos 0x800
stack:


